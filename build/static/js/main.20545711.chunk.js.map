{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","list","addItem","lol","pcent","exit","enter","bgc","e","setState","target","value","l","obj","title","status","pinned","anim","push","i","m","z","pop","_this2","console","log","count","setTimeout","splice","length","v","key","j","k","_this3","react_default","a","createElement","className","type","onChange","words","onKeyPress","pressed","onClick","clicker","style","width","concat","map","x","colorify","onDoubleClick","pinner","removeItem","downy","uppy","Date","getHours","toString","getSeconds","React","Component","App","App_Todo","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yOAcMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,GACbP,EAAKO,MAAMC,KAAOT,EAAMS,KACxBR,EAAKO,MAAME,QAAU,GACrBT,EAAKO,MAAMG,IAAM,GACjBV,EAAKO,MAAMI,MAAQ,EACnBX,EAAKY,KAAO,GACZZ,EAAKa,MAAQ,GACbb,EAAKc,IAAM,GATMd,qEAYbe,GACJZ,KAAKa,SAAS,CACZP,QAASM,EAAEE,OAAOC,0CAKpB,IAAIC,EAAIhB,KAAKI,MAAMC,KACfY,EAAM,CAAEC,MAAOlB,KAAKI,MAAME,QAASa,QAAQ,EAAOC,QAAQ,EAAOC,MAAM,GACzD,KAAdJ,EAAIC,OAAgBF,EAAEM,KAAKL,GAE/BjB,KAAKa,SAAS,CACZR,KAAMW,EACNV,QAAS,sCAIJiB,GACP,IAAIC,EAAIxB,KAAKI,MAAMC,KAMnB,GALAmB,EAAED,GAAGJ,QAAUK,EAAED,GAAGJ,OACpBnB,KAAKa,SAAS,CACZR,KAAMmB,KAGY,IAAhBA,EAAED,GAAGJ,OAAiB,CACxB,IAAIM,EAAIzB,KAAKI,MAAMG,IACnBkB,EAAEH,KAAK,GACPtB,KAAKa,SAAS,CACZN,IAAKkB,SAGJ,IAAoB,IAAhBD,EAAED,GAAGJ,OAAkB,CAC9B,IAAIM,EAAIzB,KAAKI,MAAMG,IACnBkB,EAAEC,MACF1B,KAAKa,SAAS,CACZN,IAAKkB,wCAKAF,GAAG,IAAAI,EAAA3B,KACRwB,EAAIxB,KAAKI,MAAMC,KASnB,GARAmB,EAAED,GAAGF,MAAO,EAEZrB,KAAKa,SAAS,CACZR,KAAMmB,IAGRI,QAAQC,IAAI7B,KAAKI,MAAMC,MAEnBmB,EAAED,GAAGJ,OAAQ,CACf,IAAIW,EAAQ9B,KAAKI,MAAMG,IACvBuB,EAAMJ,MACN1B,KAAKa,SAAS,CACZN,IAAKuB,IAITC,WAAW,WACTH,QAAQC,IAAI,WACZL,EAAEQ,OAAOT,EAAG,GACZI,EAAKd,SAAS,CACZR,KAAMmB,KAEP,mCAMCD,GACJ,GAAIA,IAAMvB,KAAKI,MAAMC,KAAK4B,OAAS,OAC9B,CACH,IAAIC,EAAIlC,KAAKI,MAAMC,KACfmB,EAAI,GACRA,EAAED,GAAKW,EAAEX,GACTW,EAAEX,GAAKW,EAAEX,EAAI,GACbW,EAAEX,EAAI,GAAKC,EAAED,GACbvB,KAAKa,SAAS,CACZR,KAAM6B,kCAKPX,GACH,GAAU,IAANA,OACC,CACH,IAAIW,EAAIlC,KAAKI,MAAMC,KACfmB,EAAI,GACRA,EAAED,GAAKW,EAAEX,GACTW,EAAEX,GAAKW,EAAEX,EAAI,GACbW,EAAEX,EAAI,GAAKC,EAAED,GACbvB,KAAKa,SAAS,CACZR,KAAM6B,qCAKJtB,GACN,GAAc,UAAVA,EAAEuB,IAAiB,CACrB,IAAInB,EAAIhB,KAAKI,MAAMC,KACfY,EAAM,CAAEC,MAAOlB,KAAKI,MAAME,QAASa,QAAQ,EAAOC,QAAQ,EAAQC,MAAM,GAC1D,KAAdJ,EAAIC,OAAgBF,EAAEM,KAAKL,GAC/BjB,KAAKa,SAAS,CACZR,KAAMW,EACNV,QAAS,qCAKRiB,GACL,IAAIa,EAAIpC,KAAKI,MAAMC,KAGnB,GAFA+B,EAAEb,GAAGH,QAAUgB,EAAEb,GAAGH,QAEF,IAAdgB,EAAEb,GAAGH,OACP,GAAIgB,EAAEb,KAAOa,EAAE,GAAMpC,KAAKa,SAAS,CAAER,KAAM+B,QACtC,CACD,IAAIF,EAAIE,EAAE,GACZA,EAAE,GAAKA,EAAEb,GACTa,EAAEJ,OAAOT,EAAG,GACZa,EAAEJ,OAAO,EAAG,EAAGE,GACflC,KAAKa,SAAS,CACZR,KAAM+B,IAERR,QAAQC,IAAIO,EAAEb,GAAGH,aAGhB,IAAkB,IAAdgB,EAAEb,GAAGH,OAAgB,CAC5B,IAAIiB,EAAID,EAAEb,GACVa,EAAEJ,OAAOT,EAAG,GACZa,EAAEJ,OAAOI,EAAEH,OAAQ,EAAGI,GACtBrC,KAAKa,SAAS,CACZR,KAAM+B,IAERR,QAAQC,IAAIO,EAAEb,GAAGH,0CAIZ,IAAAkB,EAAAtC,KACP,OACEuC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOC,SAAU,SAAChC,GAAQ0B,EAAKO,MAAMjC,IAAMkC,WAAY,SAAClC,GAAQ0B,EAAKS,QAAQnC,IAAM8B,UAAU,YAAY3B,MAAOf,KAAKI,MAAME,UACvIiC,EAAAC,EAAAC,cAAA,UAAQO,QAAS,WAAQV,EAAKW,WAAaP,UAAU,kCAArD,aAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAd,mBAA8D1C,KAAKI,MAAMG,IAAI0B,OAA7E,IAAsFjC,KAAKI,MAAMC,KAAK4B,QACtGM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAAwBQ,MAAO,CAAEC,MAAK,GAAAC,OAAMpD,KAAKI,MAAMG,IAAI0B,OAASjC,KAAKI,MAAMC,KAAK4B,OAAU,IAAxD,OAArD,OAGJM,EAAAC,EAAAC,cAAA,WACGzC,KAAKI,MAAMC,KAAKgD,IAAI,SAACC,EAAG/B,GAAJ,OACnBgB,EAAAC,EAAAC,cAAA,OAAKC,UAAYY,EAAEjC,KAAO,oCAAsC,qCAAuCc,IAAKZ,GAC1GgB,EAAAC,EAAAC,cAAA,UAAQC,WAAYY,EAAEnC,OAAS,wBAA0B,cAAgBmC,EAAElC,OAAS,wBAA0B,aAAc4B,QAAS,SAACpC,GAAQ0B,EAAKiB,SAAShC,IAAMiC,cAAe,SAAC5C,GAAQ0B,EAAKmB,OAAOlC,KAAO+B,EAAEpC,OAC/MqB,EAAAC,EAAAC,cAAA,UAAQO,QAAS,SAACpC,GAAQ0B,EAAKoB,WAAWnC,IAAMmB,UAAU,kBAA1D,KACAH,EAAAC,EAAAC,cAAA,UAAQO,QAAS,SAACpC,GAAQ0B,EAAKqB,MAAMpC,IAAMmB,UAAU,wBAArD,UACAH,EAAAC,EAAAC,cAAA,UAAQO,QAAS,SAACpC,GAAQ0B,EAAKsB,KAAKrC,IAAMmB,UAAU,sBAApD,UACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,QAAlB,aAAmC,IAAImB,MAAOC,WAAWC,WAAzD,KAAsE,IAAIF,MAAOG,aAAaD,wBA3KzFE,IAAMC,WAqLVC,EA9Lf,WACE,OACE5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,cACAH,EAAAC,EAAAC,cAAC2B,EAAD,CAAM/D,KAAM,OCGEgE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpC,EAAAC,EAAAC,cAACmC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.20545711.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport \"papercss/dist/paper.css\"\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"animated tada\">Todo List!</h1>\n      <Todo list={[]}></Todo>\n    </div>\n  );\n}\n\nclass Todo extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.state.list = props.list;\n    this.state.addItem = \"\";\n    this.state.lol = [];\n    this.state.pcent = 0;\n    this.exit = \"\";\n    this.enter = \"\";\n    this.bgc = \"\";\n  }\n\n  words(e) {\n    this.setState({\n      addItem: e.target.value\n    })\n  }\n\n  clicker() {\n    let l = this.state.list;\n    let obj = { title: this.state.addItem, status: false, pinned: false, anim: true }\n    if (obj.title !== \"\") { l.push(obj); }\n\n    this.setState({\n      list: l,\n      addItem: \"\"\n    })\n  }\n\n  colorify(i) {\n    let m = this.state.list;\n    m[i].status = !m[i].status;\n    this.setState({\n      list: m\n    })\n\n    if (m[i].status === true) {\n      let z = this.state.lol;\n      z.push(1);\n      this.setState({\n        lol: z\n      })\n    }\n    else if (m[i].status === false) {\n      let z = this.state.lol;\n      z.pop()\n      this.setState({\n        lol: z\n      })\n    }\n  }\n\n  removeItem(i) {\n    let m = this.state.list\n    m[i].anim = false;\n\n    this.setState({\n      list: m\n    })\n\n    console.log(this.state.list);\n\n    if (m[i].status) {\n      let count = this.state.lol;\n      count.pop()\n      this.setState({\n        lol: count\n      })\n    }\n\n    setTimeout(() => {\n      console.log(\"waiting\");\n      m.splice(i, 1);\n      this.setState({\n        list: m\n      })\n    }, 1000);\n\n\n\n  }\n\n  downy(i) {\n    if (i === this.state.list.length - 1) { }\n    else {\n      let v = this.state.list\n      let m = [];\n      m[i] = v[i];\n      v[i] = v[i + 1];\n      v[i + 1] = m[i];\n      this.setState({\n        list: v\n      })\n    }\n  }\n\n  uppy(i) {\n    if (i === 0) { }\n    else {\n      let v = this.state.list\n      let m = [];\n      m[i] = v[i];\n      v[i] = v[i - 1];\n      v[i - 1] = m[i];\n      this.setState({\n        list: v\n      })\n    }\n  }\n\n  pressed(e) {\n    if (e.key === \"Enter\") {\n      let l = this.state.list;\n      let obj = { title: this.state.addItem, status: false, pinned: false,  anim: true };\n      if (obj.title !== \"\") { l.push(obj); }\n      this.setState({\n        list: l,\n        addItem: \"\"\n      })\n    }\n  }\n\n  pinner(i) {\n    let j = this.state.list;\n    j[i].pinned = !j[i].pinned;\n\n    if (j[i].pinned===true) {\n      if (j[i] === j[0]) { this.setState({ list: j }) }\n      else {        \n          let v = j[0];\n        j[0] = j[i]\n        j.splice(i, 1)\n        j.splice(1, 0, v)      \n        this.setState({\n          list: j\n        })\n        console.log(j[i].pinned);\n      }\n    }\n    else if (j[i].pinned===false) {      \n      let k = j[i]\n      j.splice(i, 1);\n      j.splice(j.length, 0, k)\n      this.setState({\n        list: j\n      })\n      console.log(j[i].pinned);\n    }    \n  } \n\n  render() {\n    return (\n      <section>\n        <div className=\"row flex-center\">\n          <input type=\"text\" onChange={(e) => { this.words(e) }} onKeyPress={(e) => { this.pressed(e) }} className=\"col col-5\" value={this.state.addItem}></input>\n          <button onClick={() => { this.clicker() }} className=\"col col-5 background-secondary\">Add Item</button>\n        </div >\n        <div className=\"row flex-center\">\n          <h4 className=\"text-lead flex-center col-12\">Completed Tasks:{this.state.lol.length}/{this.state.list.length}</h4>\n          <div className=\"progress margin-bottom col-4\">\n            <div className=\"bar striped secondary\" style={{ width: `${(this.state.lol.length / this.state.list.length) * 100}%` }}> </div>\n          </div>\n        </div>    \n        <div>\n          {this.state.list.map((x, i) => (\n            <div className={(x.anim ? \"row flex-center animated bounceIn\" : \"row flex-center animated bounceOut\")} key={i}>\n              <button className={(x.status ? \"btn btn-success col-7\" : \"btn col-7\") + (x.pinned ? \"btn btn-warning col-7\" : \"btn col-7\")} onClick={(e) => { this.colorify(i) }} onDoubleClick={(e) => { this.pinner(i) }}>{x.title}</button>\n              <button onClick={(e) => { this.removeItem(i) }} className=\"btn btn-danger\" >X</button>\n              <button onClick={(e) => { this.downy(i) }} className=\"background-secondary\">↓</button>\n              <button onClick={(e) => { this.uppy(i) }} className=\"background-warning\">↑</button>\n              <button className=\"btn2\">Added on {new Date().getHours().toString()}:{new Date().getSeconds().toString()}</button>\n            </div>\n          ))}\n        </div>\n      </section>\n    );\n  }\n\n}\n\nexport default App;\n\n// {/* <div className=\"form-group row flex-center \">\n// <label for=\"paperSelects1\"><text className=\"col text-lead\">Select</text></label>\n// <select id=\"paperSelects1\" className=\"col \">\n//   <option value=\"1\">Option 1</option>\n//   <option value=\"2\">Option 2</option>\n//   <option value=\"3\">Option 3</option>\n// </select>\n// </div> */}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}