{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","list","addItem","lol","count","_this2","axios","get","then","res","data","setState","console","log","e","target","value","_this3","l","obj","title","status","pinned","anim","post","push","i","_this4","m","put","count1","j","length","_this5","delete","_id","pop","setTimeout","splice","v","_this6","key","k","sort","map","x","react_default","a","createElement","_this7","className","type","onChange","words","onKeyPress","pressed","onClick","clicker","style","width","concat","colorify","onDoubleClick","pinner","removeItem","downy","uppy","Date","getHours","toString","getSeconds","React","Component","App","App_Todo","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.197a1a9b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport \"papercss/dist/paper.css\"\r\nimport axios from 'axios';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"animated tada\">Todo List!</h1>\r\n      <Todo list={[]}></Todo>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Todo extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n    this.state.list = props.list;\r\n    this.state.addItem = \"\";\r\n    this.state.lol = [];\r\n    this.state.count=0   \r\n  }  \r\n\r\n  componentDidMount() {\r\n    axios.get(`/tasks`).then(res=>{\r\n      const list = res.data;\r\n      this.setState({\r\n        list\r\n      })        \r\n      console.log(res)\r\n      console.log(res.data)     \r\n    })  \r\n  }\r\n\r\n  words(e) {\r\n    this.setState({\r\n      addItem: e.target.value\r\n    })\r\n  }\r\n\r\n  clicker() {\r\n    let l = this.state.list;\r\n    let obj = { title: this.state.addItem, status: false, pinned: false, anim: true}\r\n    \r\n     axios.post(\"/tasks\",obj).then((res)=>{      \r\n      if (obj.title !== \"\") { \r\n        l.push(res.data); \r\n\r\n\r\n        this.setState({\r\n        list:l, \r\n        addItem:\"\"\r\n        }) \r\n      }      \r\n    })    \r\n  }\r\n\r\n  colorify(i) {\r\n    let m = this.state.list;    \r\n    m[i].status = !m[i].status;\r\n    console.log(m[i]);\r\n    \r\n    axios.put(\"/tasks/status\",m[i]).then((res)=>{\r\n      console.log(res.data)\r\n\r\n      // m[i]= res.data;\r\n      this.setState({\r\n        list: m\r\n      }) \r\n    })   \r\n  }\r\n\r\n  count(){\r\n    let count1=0;\r\n    let m = this.state.list;\r\n\r\n    for(var j=0; j<m.length; j++){\r\n      if(m[j].status===true){\r\n        count1 ++;\r\n      }\r\n    }\r\n    return count1\r\n  }\r\n\r\n  removeItem(i) {\r\n    let m = this.state.list\r\n\r\n    axios.delete(\"/tasks/\"+m[i]._id).then(res=>{\r\n      console.log(\"delete\",res.data);     \r\n\r\n      m[i].anim = false;\r\n\r\n      this.setState({\r\n        list: m\r\n      })\r\n  \r\n      console.log(this.state.list);\r\n  \r\n      if (m[i].status) {\r\n        let count = this.state.lol;\r\n        count.pop()\r\n        this.setState({\r\n          lol: count\r\n        })\r\n      }\r\n  \r\n      setTimeout(() => {\r\n        console.log(\"waiting\");\r\n        m.splice(i, 1);\r\n        this.setState({\r\n          list: m\r\n        })\r\n      }, 1000);\r\n\r\n      console.log(this.state.list);\r\n      \r\n  \r\n    })\r\n  }\r\n\r\n  downy(i) {\r\n    if (i === this.state.list.length - 1) { }\r\n    else {\r\n      let v = this.state.list\r\n      let m = [];\r\n      m[i] = v[i];\r\n      v[i] = v[i + 1];\r\n      v[i + 1] = m[i];\r\n      this.setState({\r\n        list: v\r\n      })\r\n    }\r\n  }\r\n\r\n  uppy(i) {\r\n    if (i === 0) { }\r\n    else {\r\n      let v = this.state.list\r\n      let m = [];\r\n      m[i] = v[i];\r\n      v[i] = v[i - 1];\r\n      v[i - 1] = m[i];\r\n      this.setState({\r\n        list: v\r\n      })\r\n    }\r\n  }\r\n\r\n  pressed(e) {\r\n    if (e.key === \"Enter\") {\r\n      let l = this.state.list;\r\n      let obj = { title: this.state.addItem, status: false, pinned: false,  anim: true};\r\n\r\n      axios.post(\"/tasks\",obj).then((res)=>{\r\n        if (obj.title !== \"\") { l.push(res.data); }\r\n\r\n        this.setState({\r\n          list: l,\r\n          addItem: \"\"\r\n        });\r\n        // console.log(res.data);\r\n        \r\n      })      \r\n    }\r\n  }\r\n\r\n  pinner(i) {\r\n    let j = this.state.list;\r\n    j[i].pinned = !j[i].pinned;\r\n\r\n    if (j[i].pinned===true) {\r\n      if (j[i] === j[0]) { this.setState({ list: j }) }\r\n      else {        \r\n          let v = j[0];\r\n        j[0] = j[i]\r\n        j.splice(i, 1)\r\n        j.splice(1, 0, v)      \r\n        this.setState({\r\n          list: j\r\n        })\r\n        console.log(j[i].pinned);\r\n      }\r\n    }\r\n    else if (j[i].pinned===false) {      \r\n      let k = j[i]\r\n      j.splice(i, 1);\r\n      j.splice(j.length, 0, k)\r\n      this.setState({\r\n        list: j\r\n      })\r\n      console.log(j[i].pinned);\r\n    }    \r\n  } \r\n\r\n  sorting() {\r\n    let m = this.state.list\r\n    m.sort();\r\n\r\n    this.setState({\r\n      list : m\r\n    })\r\n   \r\n    this.state.list.map((x)=>(\r\n    <button>{x.title}</button>\r\n    ))\r\n    \r\n  }\r\n\r\n \r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <div className=\"row flex-center\">\r\n          <input type=\"text\" onChange={(e) => { this.words(e) }} onKeyPress={(e) => { this.pressed(e) }} className=\"col col-5\" value={this.state.addItem}></input>\r\n          <button onClick={() => { this.clicker() }} className=\"col col-5 background-secondary\">Add Item</button>\r\n        </div >\r\n        <div className=\"row flex-center\">\r\n          <h4 className=\"text-lead flex-center col-12\">Completed Tasks:{this.count()}/{this.state.list.length}</h4>\r\n          <div className=\"progress margin-bottom col-4\">\r\n            <div className=\"bar striped secondary\" style={{ width: `${(this.count())/(this.state.list.length) * 100}%` }}> </div>\r\n          </div>\r\n        </div>  \r\n\r\n        <div>\r\n          {this.state.list.map((x, i) => (\r\n            <div className={(x.anim ? \"row flex-center animated bounceIn\" : \"row flex-center animated bounceOut\")} key={i}>\r\n              <button className={(x.status ? \"btn btn-success col-7\" : \"btn col-7\") + (x.pinned ? \"btn btn-warning col-7\" : \"btn col-7\")} onClick={() => { this.colorify(i) }} onDoubleClick={(e) => { this.pinner(i) }}>{x.title}</button>\r\n              <button onClick={(e) => { this.removeItem(i) }} className=\"btn btn-danger\" >X</button>\r\n              <button onClick={(e) => { this.downy(i) }} className=\"background-secondary\">↓</button>\r\n              <button onClick={(e) => { this.uppy(i) }} className=\"background-warning\">↑</button>\r\n              <button className=\"btn2\">Added on {new Date().getHours().toString()} : {new Date().getSeconds().toString()}</button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        \r\n      </section>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n// {/* <div className=\"form-group row flex-center \">\r\n// <label for=\"paperSelects1\"><text className=\"col text-lead\">Select</text></label>\r\n// <select id=\"paperSelects1\" className=\"col \">\r\n//   <option value=\"1\">Option 1</option>\r\n//   <option value=\"2\">Option 2</option>\r\n//   <option value=\"3\">Option 3</option>\r\n// </select>\r\n// </div> */}\r\n\r\n/* m.map((x,i)=>{\r\n  m[i].bday = i;\r\n  return(m.sort((a,b) => {\r\n    let x =  a.bday - b.bday;\r\n    if(x<0){\r\n      return(m)\r\n    }\r\n    else {\r\n      return{\r\n        tmp = m[i]\r\n        m[i] : m[i+1]\r\n        m[i+1] : tmp;\r\n      }\r\n    }\r\n  }))\r\n}) */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}